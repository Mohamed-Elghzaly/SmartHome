

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 12 19:16:28 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text31,global,reloc=2,class=CODE,delta=1
    40                           	psect	text32,global,reloc=2,class=CODE,delta=1
    41                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 21/07/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F46K20 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
    85   000000                     
    86 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
    87   000000                     _PIR2bits	set	4001
    88   000000                     _PIE2bits	set	4000
    89   000000                     _IPR1bits	set	3999
    90   000000                     _IPR2bits	set	4002
    91   000000                     _PIR1bits	set	3998
    92   000000                     _SSPADD	set	4040
    93   000000                     _TRISD	set	3989
    94   000000                     _TRISC	set	3988
    95   000000                     _TRISB	set	3987
    96   000000                     _LATC	set	3979
    97   000000                     _LATB	set	3978
    98   000000                     _SSPCON2bits	set	4037
    99   000000                     _SSPSTATbits	set	4039
   100   000000                     _SSPCON1bits	set	4038
   101   000000                     _LATDbits	set	3980
   102   000000                     _SSPMSK	set	3959
   103   000000                     _WPUB	set	3964
   104   000000                     _ANSEL	set	3966
   105   000000                     _LATA	set	3977
   106   000000                     _LATD	set	3980
   107   000000                     _LATE	set	3981
   108   000000                     _TRISA	set	3986
   109   000000                     _TRISE	set	3990
   110   000000                     _OSCTUNE	set	3995
   111   000000                     _OSCCON	set	4051
   112   000000                     _INTCON2bits	set	4081
   113   000000                     _ANSELH	set	3967
   114   000000                     _INTCONbits	set	4082
   115   000000                     _PIE1bits	set	3997
   116   000000                     _SSPCON2	set	4037
   117   000000                     _SSPCON1	set	4038
   118   000000                     _SSPSTAT	set	4039
   119   000000                     _SSPBUF	set	4041
   120   000000                     _RCONbits	set	4048
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   001272                     __pcinit:
   126                           	callstack 0
   127   001272                     start_initialization:
   128                           	callstack 0
   129   001272                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Clear objects allocated to COMRAM (17 bytes)
   133   001272  EE00  F001         	lfsr	0,__pbssCOMRAM
   134   001276  0E11               	movlw	17
   135   001278                     clear_0:
   136   001278  6AEE               	clrf	postinc0,c
   137   00127A  06E8               	decf	wreg,f,c
   138   00127C  E1FD               	bnz	clear_0
   139   00127E                     end_of_initialization:
   140                           	callstack 0
   141   00127E                     __end_of__initialization:
   142                           	callstack 0
   143   00127E  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   144   001280  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   145   001282  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146   001284  6EF8               	movwf	tblptru,c
   147   001286  0100               	movlb	0
   148   001288  EFAE  F008         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssCOMRAM
   151   000001                     __pbssCOMRAM:
   152                           	callstack 0
   153   000001                     _I2C_SlaveWrColInterruptHandler:
   154                           	callstack 0
   155   000001                     	ds	2
   156   000003                     _I2C_SlaveBusColInterruptHandler:
   157                           	callstack 0
   158   000003                     	ds	2
   159   000005                     _I2C_SlaveAddrInterruptHandler:
   160                           	callstack 0
   161   000005                     	ds	2
   162   000007                     _I2C_SlaveWrInterruptHandler:
   163                           	callstack 0
   164   000007                     	ds	2
   165   000009                     _I2C_SlaveRdInterruptHandler:
   166                           	callstack 0
   167   000009                     	ds	2
   168   00000B                     _MSSP_InterruptHandler:
   169                           	callstack 0
   170   00000B                     	ds	2
   171   00000D                     _i2cSlaveState:
   172                           	callstack 0
   173   00000D                     	ds	1
   174   00000E                     _i2cSlaveAddr:
   175                           	callstack 0
   176   00000E                     	ds	1
   177   00000F                     _i2cRdData:
   178                           	callstack 0
   179   00000F                     	ds	1
   180   000010                     _i2cWrData:
   181                           	callstack 0
   182   000010                     	ds	1
   183   000011                     _ReadData:
   184                           	callstack 0
   185   000011                     	ds	1
   186                           
   187                           	psect	cstackCOMRAM
   188   000012                     __pcstackCOMRAM:
   189                           	callstack 0
   190   000012                     I2C_SlaveSendTxData@data:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x0
   194   000012                     	ds	1
   195   000013                     ??_I2C_Isr:
   196   000013                     
   197                           ; 1 bytes @ 0x1
   198   000013                     	ds	2
   199   000015                     ??_INTERRUPT_InterruptManagerHigh:
   200                           
   201                           ; 1 bytes @ 0x3
   202   000015                     	ds	2
   203   000017                     I2C_SlaveSetSlaveAddr@slaveAddr:
   204                           	callstack 0
   205   000017                     I2C_SlaveSetSlaveMask@maskAddr:
   206                           	callstack 0
   207   000017                     I2C_SlaveSetIsrHandler@handler:
   208                           	callstack 0
   209   000017                     I2C_SlaveSetReadIntHandler@handler:
   210                           	callstack 0
   211   000017                     I2C_SlaveSetWriteIntHandler@handler:
   212                           	callstack 0
   213   000017                     I2C_SlaveSetAddrIntHandler@handler:
   214                           	callstack 0
   215   000017                     I2C_SlaveSetWrColIntHandler@handler:
   216                           	callstack 0
   217   000017                     I2C_SlaveSetBusColIntHandler@handler:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x5
   221   000017                     	ds	2
   222   000019                     
   223                           ; 1 bytes @ 0x7
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 9 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, status,0, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called: 7
   249 ;; This function calls:
   250 ;;		_I2C_Open
   251 ;;		_I2C_SlaveSetReadIntHandler
   252 ;;		_SYSTEM_Initialize
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text0
   259   00115C                     __ptext0:
   260                           	callstack 0
   261   00115C                     _main:
   262                           	callstack 24
   263   00115C                     
   264                           ;main.c: 12:     SYSTEM_Initialize();
   265   00115C  EC6E  F009         	call	_SYSTEM_Initialize	;wreg free
   266   001160                     
   267                           ;main.c: 19:     (INTCONbits.GIEH = 1);
   268   001160  8EF2               	bsf	242,7,c	;volatile
   269   001162                     
   270                           ;main.c: 22:     (INTCONbits.GIEL = 1);
   271   001162  8CF2               	bsf	242,6,c	;volatile
   272   001164                     
   273                           ;main.c: 25:     (INTCONbits.PEIE = 1);
   274   001164  8CF2               	bsf	242,6,c	;volatile
   275                           
   276                           ;main.c: 27:     I2C_Open();
   277   001166  EC7F  F008         	call	_I2C_Open	;wreg free
   278                           
   279                           ;main.c: 28:     I2C_SlaveSetReadIntHandler(Custom_I2C_SlaveDefRdInterruptHandler);
   280   00116A  0E7C               	movlw	low _Custom_I2C_SlaveDefRdInterruptHandler
   281   00116C  6E17               	movwf	I2C_SlaveSetReadIntHandler@handler^0,c
   282   00116E  0E13               	movlw	high _Custom_I2C_SlaveDefRdInterruptHandler
   283   001170  6E18               	movwf	(I2C_SlaveSetReadIntHandler@handler+1)^0,c
   284   001172  EC8E  F009         	call	_I2C_SlaveSetReadIntHandler	;wreg free
   285   001176                     l1357:
   286                           
   287                           ;main.c: 30:     {;main.c: 31:         if(ReadData > 35){
   288   001176  0E23               	movlw	35
   289   001178  6411               	cpfsgt	_ReadData^0,c
   290   00117A  EFC1  F008         	goto	u301
   291   00117E  EFC3  F008         	goto	u300
   292   001182                     u301:
   293   001182  EFC7  F008         	goto	l107
   294   001186                     u300:
   295   001186  808C               	bsf	140,0,c	;volatile
   296   001188  928C               	bcf	140,1,c	;volatile
   297   00118A  EFBB  F008         	goto	l1357
   298   00118E                     l107:
   299   00118E  908C               	bcf	140,0,c	;volatile
   300   001190  928C               	bcf	140,1,c	;volatile
   301   001192  EFBB  F008         	goto	l1357
   302   001196  EF3C  F000         	goto	start
   303   00119A                     __end_of_main:
   304                           	callstack 0
   305                           
   306 ;; *************** function _SYSTEM_Initialize *****************
   307 ;; Defined at:
   308 ;;		line 50 in file "mcc_generated_files/mcc.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; Hardware stack levels required when called: 6
   329 ;; This function calls:
   330 ;;		_I2C_Initialize
   331 ;;		_INTERRUPT_Initialize
   332 ;;		_OSCILLATOR_Initialize
   333 ;;		_PIN_MANAGER_Initialize
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340   0012DC                     __ptext1:
   341                           	callstack 0
   342   0012DC                     _SYSTEM_Initialize:
   343                           	callstack 24
   344   0012DC                     
   345                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   346   0012DC  ECA2  F009         	call	_INTERRUPT_Initialize	;wreg free
   347   0012E0                     
   348                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
   349   0012E0  EC77  F009         	call	_I2C_Initialize	;wreg free
   350   0012E4                     
   351                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
   352   0012E4  ECCD  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   353   0012E8                     
   354                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
   355   0012E8  EC7F  F009         	call	_OSCILLATOR_Initialize	;wreg free
   356   0012EC  0012               	return		;funcret
   357   0012EE                     __end_of_SYSTEM_Initialize:
   358                           	callstack 0
   359                           
   360 ;; *************** function _PIN_MANAGER_Initialize *****************
   361 ;; Defined at:
   362 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 5
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_SYSTEM_Initialize
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text2
   391   00119A                     __ptext2:
   392                           	callstack 0
   393   00119A                     _PIN_MANAGER_Initialize:
   394                           	callstack 24
   395   00119A                     
   396                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   397   00119A  0E00               	movlw	0
   398   00119C  6E8D               	movwf	141,c	;volatile
   399                           
   400                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   401   00119E  0E00               	movlw	0
   402   0011A0  6E8C               	movwf	140,c	;volatile
   403                           
   404                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   405   0011A2  0E00               	movlw	0
   406   0011A4  6E89               	movwf	137,c	;volatile
   407                           
   408                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   409   0011A6  0E00               	movlw	0
   410   0011A8  6E8A               	movwf	138,c	;volatile
   411                           
   412                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   413   0011AA  0E00               	movlw	0
   414   0011AC  6E8B               	movwf	139,c	;volatile
   415                           
   416                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   417   0011AE  0E07               	movlw	7
   418   0011B0  6E96               	movwf	150,c	;volatile
   419   0011B2                     
   420                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   421   0011B2  6892               	setf	146,c	;volatile
   422   0011B4                     
   423                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   424   0011B4  6893               	setf	147,c	;volatile
   425   0011B6                     
   426                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
   427   0011B6  6894               	setf	148,c	;volatile
   428                           
   429                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFC;
   430   0011B8  0EFC               	movlw	252
   431   0011BA  6E95               	movwf	149,c	;volatile
   432   0011BC                     
   433                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   434   0011BC  687E               	setf	126,c	;volatile
   435                           
   436                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   437   0011BE  0E1F               	movlw	31
   438   0011C0  6E7F               	movwf	127,c	;volatile
   439                           
   440                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   441   0011C2  0E00               	movlw	0
   442   0011C4  6E7C               	movwf	124,c	;volatile
   443   0011C6                     
   444                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   445   0011C6  8EF1               	bsf	241,7,c	;volatile
   446   0011C8  0012               	return		;funcret
   447   0011CA                     __end_of_PIN_MANAGER_Initialize:
   448                           	callstack 0
   449                           
   450 ;; *************** function _OSCILLATOR_Initialize *****************
   451 ;; Defined at:
   452 ;;		line 59 in file "mcc_generated_files/mcc.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used: 1
   472 ;; Hardware stack levels required when called: 5
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_SYSTEM_Initialize
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text3
   481   0012FE                     __ptext3:
   482                           	callstack 0
   483   0012FE                     _OSCILLATOR_Initialize:
   484                           	callstack 24
   485   0012FE                     
   486                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x30;
   487   0012FE  0E30               	movlw	48
   488   001300  6ED3               	movwf	211,c	;volatile
   489                           
   490                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   491   001302  0E00               	movlw	0
   492   001304  6E9B               	movwf	155,c	;volatile
   493   001306  0012               	return		;funcret
   494   001308                     __end_of_OSCILLATOR_Initialize:
   495                           	callstack 0
   496                           
   497 ;; *************** function _INTERRUPT_Initialize *****************
   498 ;; Defined at:
   499 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		None
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; Hardware stack levels required when called: 5
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_SYSTEM_Initialize
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text4
   528   001344                     __ptext4:
   529                           	callstack 0
   530   001344                     _INTERRUPT_Initialize:
   531                           	callstack 24
   532   001344                     
   533                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
   534   001344  8ED0               	bsf	208,7,c	;volatile
   535                           
   536                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR2bits.BCLIP = 1;
   537   001346  86A2               	bsf	162,3,c	;volatile
   538                           
   539                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SSPIP = 1;
   540   001348  869F               	bsf	159,3,c	;volatile
   541   00134A  0012               	return		;funcret
   542   00134C                     __end_of_INTERRUPT_Initialize:
   543                           	callstack 0
   544                           
   545 ;; *************** function _I2C_Initialize *****************
   546 ;; Defined at:
   547 ;;		line 108 in file "mcc_generated_files/i2c_slave.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 5
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_SYSTEM_Initialize
   572 ;;		_I2C_Enable
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text5
   577   0012EE                     __ptext5:
   578                           	callstack 0
   579   0012EE                     _I2C_Initialize:
   580                           	callstack 24
   581   0012EE                     
   582                           ;mcc_generated_files/i2c_slave.c: 110:     SSPSTAT = 0x80;
   583   0012EE  0E80               	movlw	128
   584   0012F0  6EC7               	movwf	199,c	;volatile
   585   0012F2                     
   586                           ;mcc_generated_files/i2c_slave.c: 111:     SSPCON1 |= 0x06;
   587   0012F2  0E06               	movlw	6
   588   0012F4  12C6               	iorwf	198,f,c	;volatile
   589   0012F6                     
   590                           ;mcc_generated_files/i2c_slave.c: 112:     SSPCON2 = 0x00;
   591   0012F6  0E00               	movlw	0
   592   0012F8  6EC5               	movwf	197,c	;volatile
   593   0012FA                     
   594                           ;mcc_generated_files/i2c_slave.c: 113:     SSPCON1bits.SSPEN = 0;
   595   0012FA  9AC6               	bcf	198,5,c	;volatile
   596   0012FC  0012               	return		;funcret
   597   0012FE                     __end_of_I2C_Initialize:
   598                           	callstack 0
   599                           
   600 ;; *************** function _I2C_Open *****************
   601 ;; Defined at:
   602 ;;		line 116 in file "mcc_generated_files/i2c_slave.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 6
   623 ;; This function calls:
   624 ;;		_I2C_SlaveEnableIrq
   625 ;;		_I2C_SlaveOpen
   626 ;;		_I2C_SlaveSetAddrIntHandler
   627 ;;		_I2C_SlaveSetBusColIntHandler
   628 ;;		_I2C_SlaveSetIsrHandler
   629 ;;		_I2C_SlaveSetReadIntHandler
   630 ;;		_I2C_SlaveSetSlaveAddr
   631 ;;		_I2C_SlaveSetSlaveMask
   632 ;;		_I2C_SlaveSetWrColIntHandler
   633 ;;		_I2C_SlaveSetWriteIntHandler
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text6
   640   0010FE                     __ptext6:
   641                           	callstack 0
   642   0010FE                     _I2C_Open:
   643                           	callstack 24
   644   0010FE                     
   645                           ;mcc_generated_files/i2c_slave.c: 118:     I2C_SlaveOpen();
   646   0010FE  EC2A  F009         	call	_I2C_SlaveOpen	;wreg free
   647   001102                     
   648                           ;mcc_generated_files/i2c_slave.c: 119:     I2C_SlaveSetSlaveAddr(112);
   649   001102  0E70               	movlw	112
   650   001104  ECAA  F009         	call	_I2C_SlaveSetSlaveAddr
   651   001108                     
   652                           ;mcc_generated_files/i2c_slave.c: 120:     I2C_SlaveSetSlaveMask(127);
   653   001108  0E7F               	movlw	127
   654   00110A  ECA6  F009         	call	_I2C_SlaveSetSlaveMask
   655                           
   656                           ;mcc_generated_files/i2c_slave.c: 121:     I2C_SlaveSetIsrHandler(I2C_Isr);
   657   00110E  0E02               	movlw	low _I2C_Isr
   658   001110  6E17               	movwf	I2C_SlaveSetIsrHandler@handler^0,c
   659   001112  0E10               	movlw	high _I2C_Isr
   660   001114  6E18               	movwf	(I2C_SlaveSetIsrHandler@handler+1)^0,c
   661   001116  EC93  F009         	call	_I2C_SlaveSetIsrHandler	;wreg free
   662                           
   663                           ;mcc_generated_files/i2c_slave.c: 122:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
   664   00111A  0E00               	movlw	0
   665   00111C  6E17               	movwf	I2C_SlaveSetBusColIntHandler@handler^0,c
   666   00111E  0E00               	movlw	0
   667   001120  6E18               	movwf	(I2C_SlaveSetBusColIntHandler@handler+1)^0,c
   668   001122  EC98  F009         	call	_I2C_SlaveSetBusColIntHandler	;wreg free
   669                           
   670                           ;mcc_generated_files/i2c_slave.c: 123:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
   671   001126  0E5C               	movlw	low _I2C_SlaveDefWrInterruptHandler
   672   001128  6E17               	movwf	I2C_SlaveSetWriteIntHandler@handler^0,c
   673   00112A  0E13               	movlw	high _I2C_SlaveDefWrInterruptHandler
   674   00112C  6E18               	movwf	(I2C_SlaveSetWriteIntHandler@handler+1)^0,c
   675   00112E  EC84  F009         	call	_I2C_SlaveSetWriteIntHandler	;wreg free
   676                           
   677                           ;mcc_generated_files/i2c_slave.c: 124:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
   678   001132  0E6C               	movlw	low _I2C_SlaveDefRdInterruptHandler
   679   001134  6E17               	movwf	I2C_SlaveSetReadIntHandler@handler^0,c
   680   001136  0E13               	movlw	high _I2C_SlaveDefRdInterruptHandler
   681   001138  6E18               	movwf	(I2C_SlaveSetReadIntHandler@handler+1)^0,c
   682   00113A  EC8E  F009         	call	_I2C_SlaveSetReadIntHandler	;wreg free
   683                           
   684                           ;mcc_generated_files/i2c_slave.c: 125:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
   685   00113E  0E74               	movlw	low _I2C_SlaveDefAddrInterruptHandler
   686   001140  6E17               	movwf	I2C_SlaveSetAddrIntHandler@handler^0,c
   687   001142  0E13               	movlw	high _I2C_SlaveDefAddrInterruptHandler
   688   001144  6E18               	movwf	(I2C_SlaveSetAddrIntHandler@handler+1)^0,c
   689   001146  EC9D  F009         	call	_I2C_SlaveSetAddrIntHandler	;wreg free
   690                           
   691                           ;mcc_generated_files/i2c_slave.c: 126:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
   692   00114A  0E00               	movlw	0
   693   00114C  6E17               	movwf	I2C_SlaveSetWrColIntHandler@handler^0,c
   694   00114E  0E00               	movlw	0
   695   001150  6E18               	movwf	(I2C_SlaveSetWrColIntHandler@handler+1)^0,c
   696   001152  EC89  F009         	call	_I2C_SlaveSetWrColIntHandler	;wreg free
   697   001156                     
   698                           ;mcc_generated_files/i2c_slave.c: 127:     I2C_SlaveEnableIrq();
   699   001156  ECC1  F009         	call	_I2C_SlaveEnableIrq	;wreg free
   700   00115A  0012               	return		;funcret
   701   00115C                     __end_of_I2C_Open:
   702                           	callstack 0
   703                           
   704 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
   705 ;; Defined at:
   706 ;;		line 246 in file "mcc_generated_files/i2c_slave.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  handler         2    5[COMRAM] PTR FTN()void 
   709 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        2 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 5
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_I2C_Open
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text7
   736   001308                     __ptext7:
   737                           	callstack 0
   738   001308                     _I2C_SlaveSetWriteIntHandler:
   739                           	callstack 24
   740   001308                     
   741                           ;mcc_generated_files/i2c_slave.c: 247:     I2C_SlaveWrInterruptHandler = handler;
   742   001308  C017  F007         	movff	I2C_SlaveSetWriteIntHandler@handler,_I2C_SlaveWrInterruptHandler
   743   00130C  C018  F008         	movff	I2C_SlaveSetWriteIntHandler@handler+1,_I2C_SlaveWrInterruptHandler+1
   744   001310  0012               	return		;funcret
   745   001312                     __end_of_I2C_SlaveSetWriteIntHandler:
   746                           	callstack 0
   747                           
   748 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
   749 ;; Defined at:
   750 ;;		line 279 in file "mcc_generated_files/i2c_slave.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  handler         2    5[COMRAM] PTR FTN()void 
   753 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 5
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_I2C_Open
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text8
   780   001312                     __ptext8:
   781                           	callstack 0
   782   001312                     _I2C_SlaveSetWrColIntHandler:
   783                           	callstack 24
   784   001312                     
   785                           ;mcc_generated_files/i2c_slave.c: 280:     I2C_SlaveWrColInterruptHandler = handler;
   786   001312  C017  F001         	movff	I2C_SlaveSetWrColIntHandler@handler,_I2C_SlaveWrColInterruptHandler
   787   001316  C018  F002         	movff	I2C_SlaveSetWrColIntHandler@handler+1,_I2C_SlaveWrColInterruptHandler+1
   788   00131A  0012               	return		;funcret
   789   00131C                     __end_of_I2C_SlaveSetWrColIntHandler:
   790                           	callstack 0
   791                           
   792 ;; *************** function _I2C_SlaveSetSlaveMask *****************
   793 ;; Defined at:
   794 ;;		line 336 in file "mcc_generated_files/i2c_slave.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  maskAddr        1    wreg     unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  maskAddr        1    5[COMRAM] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        1 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; Hardware stack levels required when called: 5
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_I2C_Open
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text9
   823   00134C                     __ptext9:
   824                           	callstack 0
   825   00134C                     _I2C_SlaveSetSlaveMask:
   826                           	callstack 24
   827                           
   828                           ;incstack = 0
   829                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
   830   00134C  6E17               	movwf	I2C_SlaveSetSlaveMask@maskAddr^0,c
   831   00134E                     
   832                           ;mcc_generated_files/i2c_slave.c: 336: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 337: {;mcc_generated_files/i
      +                          2c_slave.c: 338:     SSPMSK = (uint8_t) (maskAddr);
   833   00134E  C017  FF77         	movff	I2C_SlaveSetSlaveMask@maskAddr,3959	;volatile
   834   001352  0012               	return		;funcret
   835   001354                     __end_of_I2C_SlaveSetSlaveMask:
   836                           	callstack 0
   837                           
   838 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
   839 ;; Defined at:
   840 ;;		line 331 in file "mcc_generated_files/i2c_slave.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  slaveAddr       1    wreg     unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  slaveAddr       1    5[COMRAM] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;Total ram usage:        1 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 5
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_I2C_Open
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text10
   869   001354                     __ptext10:
   870                           	callstack 0
   871   001354                     _I2C_SlaveSetSlaveAddr:
   872                           	callstack 24
   873                           
   874                           ;incstack = 0
   875                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
   876   001354  6E17               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr^0,c
   877   001356                     
   878                           ;mcc_generated_files/i2c_slave.c: 331: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 332: {;mcc_generated_files/
      +                          i2c_slave.c: 333:     SSPADD = (uint8_t) (slaveAddr);
   879   001356  C017  FFC8         	movff	I2C_SlaveSetSlaveAddr@slaveAddr,4040	;volatile
   880   00135A  0012               	return		;funcret
   881   00135C                     __end_of_I2C_SlaveSetSlaveAddr:
   882                           	callstack 0
   883                           
   884 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
   885 ;; Defined at:
   886 ;;		line 229 in file "mcc_generated_files/i2c_slave.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  handler         2    5[COMRAM] PTR FTN()void 
   889 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), Custom_I2C_SlaveDefRdInterruptHandler(1), 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 5
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;;		_I2C_Open
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text11
   917   00131C                     __ptext11:
   918                           	callstack 0
   919   00131C                     _I2C_SlaveSetReadIntHandler:
   920                           	callstack 25
   921   00131C                     
   922                           ;mcc_generated_files/i2c_slave.c: 230:     I2C_SlaveRdInterruptHandler = handler;
   923   00131C  C017  F009         	movff	I2C_SlaveSetReadIntHandler@handler,_I2C_SlaveRdInterruptHandler
   924   001320  C018  F00A         	movff	I2C_SlaveSetReadIntHandler@handler+1,_I2C_SlaveRdInterruptHandler+1
   925   001324  0012               	return		;funcret
   926   001326                     __end_of_I2C_SlaveSetReadIntHandler:
   927                           	callstack 0
   928                           
   929 ;; *************** function _I2C_SlaveSetIsrHandler *****************
   930 ;; Defined at:
   931 ;;		line 223 in file "mcc_generated_files/i2c_slave.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  handler         2    5[COMRAM] PTR FTN()void 
   934 ;;		 -> I2C_Isr(1), 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        2 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 5
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_I2C_Open
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text12
   961   001326                     __ptext12:
   962                           	callstack 0
   963   001326                     _I2C_SlaveSetIsrHandler:
   964                           	callstack 24
   965   001326                     
   966                           ;mcc_generated_files/i2c_slave.c: 223: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 224: {;mcc_generated_files/i2c_slave.c: 225:   
      +                            MSSP_InterruptHandler = handler;
   967   001326  C017  F00B         	movff	I2C_SlaveSetIsrHandler@handler,_MSSP_InterruptHandler
   968   00132A  C018  F00C         	movff	I2C_SlaveSetIsrHandler@handler+1,_MSSP_InterruptHandler+1
   969   00132E  0012               	return		;funcret
   970   001330                     __end_of_I2C_SlaveSetIsrHandler:
   971                           	callstack 0
   972                           
   973 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
   974 ;; Defined at:
   975 ;;		line 295 in file "mcc_generated_files/i2c_slave.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  handler         2    5[COMRAM] PTR FTN()void 
   978 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;Total ram usage:        2 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 5
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_I2C_Open
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text13
  1005   001330                     __ptext13:
  1006                           	callstack 0
  1007   001330                     _I2C_SlaveSetBusColIntHandler:
  1008                           	callstack 24
  1009   001330                     
  1010                           ;mcc_generated_files/i2c_slave.c: 296:     I2C_SlaveBusColInterruptHandler = handler;
  1011   001330  C017  F003         	movff	I2C_SlaveSetBusColIntHandler@handler,_I2C_SlaveBusColInterruptHandler
  1012   001334  C018  F004         	movff	I2C_SlaveSetBusColIntHandler@handler+1,_I2C_SlaveBusColInterruptHandler+1
  1013   001338  0012               	return		;funcret
  1014   00133A                     __end_of_I2C_SlaveSetBusColIntHandler:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  1018 ;; Defined at:
  1019 ;;		line 263 in file "mcc_generated_files/i2c_slave.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  handler         2    5[COMRAM] PTR FTN()void 
  1022 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 5
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_I2C_Open
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text14
  1049   00133A                     __ptext14:
  1050                           	callstack 0
  1051   00133A                     _I2C_SlaveSetAddrIntHandler:
  1052                           	callstack 24
  1053   00133A                     
  1054                           ;mcc_generated_files/i2c_slave.c: 264:     I2C_SlaveAddrInterruptHandler = handler;
  1055   00133A  C017  F005         	movff	I2C_SlaveSetAddrIntHandler@handler,_I2C_SlaveAddrInterruptHandler
  1056   00133E  C018  F006         	movff	I2C_SlaveSetAddrIntHandler@handler+1,_I2C_SlaveAddrInterruptHandler+1
  1057   001342  0012               	return		;funcret
  1058   001344                     __end_of_I2C_SlaveSetAddrIntHandler:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _I2C_SlaveOpen *****************
  1062 ;; Defined at:
  1063 ;;		line 310 in file "mcc_generated_files/i2c_slave.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      _Bool 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 5
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_I2C_Open
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text15
  1092   001254                     __ptext15:
  1093                           	callstack 0
  1094   001254                     _I2C_SlaveOpen:
  1095                           	callstack 24
  1096   001254                     
  1097                           ;mcc_generated_files/i2c_slave.c: 312:     if(!SSPCON1bits.SSPEN)
  1098   001254  BAC6               	btfsc	198,5,c	;volatile
  1099   001256  EF2F  F009         	goto	u11
  1100   00125A  EF31  F009         	goto	u10
  1101   00125E                     u11:
  1102   00125E  EF38  F009         	goto	l318
  1103   001262                     u10:
  1104   001262                     
  1105                           ;mcc_generated_files/i2c_slave.c: 313:     {;mcc_generated_files/i2c_slave.c: 314:      
      +                             SSPSTAT = 0x80;
  1106   001262  0E80               	movlw	128
  1107   001264  6EC7               	movwf	199,c	;volatile
  1108   001266                     
  1109                           ;mcc_generated_files/i2c_slave.c: 315:         SSPCON1 |= 0x06;
  1110   001266  0E06               	movlw	6
  1111   001268  12C6               	iorwf	198,f,c	;volatile
  1112   00126A                     
  1113                           ;mcc_generated_files/i2c_slave.c: 316:         SSPCON2 = 0x00;
  1114   00126A  0E00               	movlw	0
  1115   00126C  6EC5               	movwf	197,c	;volatile
  1116   00126E                     
  1117                           ;mcc_generated_files/i2c_slave.c: 317:         SSPCON1bits.SSPEN = 1;
  1118   00126E  8AC6               	bsf	198,5,c	;volatile
  1119   001270                     l318:
  1120   001270  0012               	return		;funcret
  1121   001272                     __end_of_I2C_SlaveOpen:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _I2C_SlaveEnableIrq *****************
  1125 ;; Defined at:
  1126 ;;		line 341 in file "mcc_generated_files/i2c_slave.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		None
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 5
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_I2C_Open
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text16
  1155   001382                     __ptext16:
  1156                           	callstack 0
  1157   001382                     _I2C_SlaveEnableIrq:
  1158                           	callstack 24
  1159   001382                     
  1160                           ;mcc_generated_files/i2c_slave.c: 343:     PIE1bits.SSPIE = 1;
  1161   001382  869D               	bsf	157,3,c	;volatile
  1162   001384  0012               	return		;funcret
  1163   001386                     __end_of_I2C_SlaveEnableIrq:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  1167 ;; Defined at:
  1168 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 4
  1189 ;; This function calls:
  1190 ;;		NULL
  1191 ;;		_I2C_Isr
  1192 ;; This function is called by:
  1193 ;;		Interrupt level 2
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	intcode
  1198   000008                     __pintcode:
  1199                           	callstack 0
  1200   000008                     _INTERRUPT_InterruptManagerHigh:
  1201                           	callstack 24
  1202                           
  1203                           ;incstack = 0
  1204   000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1205   00000A  CFFA F015          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  1206   00000E  CFFB F016          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  1207   000012                     
  1208                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  1209   000012  A6A0               	btfss	160,3,c	;volatile
  1210   000014  EF0E  F000         	goto	i2u25_41
  1211   000018  EF10  F000         	goto	i2u25_40
  1212   00001C                     i2u25_41:
  1213   00001C  EF26  F000         	goto	i2l409
  1214   000020                     i2u25_40:
  1215   000020  A6A1               	btfss	161,3,c	;volatile
  1216   000022  EF15  F000         	goto	i2u26_41
  1217   000026  EF17  F000         	goto	i2u26_40
  1218   00002A                     i2u26_41:
  1219   00002A  EF26  F000         	goto	i2l409
  1220   00002E                     i2u26_40:
  1221   00002E                     i2l1319:
  1222                           
  1223                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         MSSP_InterruptHandler();
  1224   00002E  D802               	call	i2u27_48
  1225   000030  EF24  F000         	goto	i2u27_49
  1226   000034                     i2u27_48:
  1227   000034  0005               	push	
  1228   000036  6EFA               	movwf	pclath,c
  1229   000038  500B               	movf	_MSSP_InterruptHandler^0,w,c
  1230   00003A  6EFD               	movwf	tosl,c
  1231   00003C  500C               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  1232   00003E  6EFE               	movwf	tosh,c
  1233   000040  50F8               	movf	tblptru,w,c
  1234   000042  6EFF               	movwf	tosu,c
  1235   000044  50FA               	movf	pclath,w,c
  1236   000046  0012               	return		;indir
  1237   000048                     i2u27_49:
  1238                           
  1239                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  1240   000048  EF36  F000         	goto	i2l413
  1241   00004C                     i2l409:
  1242   00004C  A69D               	btfss	157,3,c	;volatile
  1243   00004E  EF2B  F000         	goto	i2u28_41
  1244   000052  EF2D  F000         	goto	i2u28_40
  1245   000056                     i2u28_41:
  1246   000056  EF36  F000         	goto	i2l413
  1247   00005A                     i2u28_40:
  1248   00005A  A69E               	btfss	158,3,c	;volatile
  1249   00005C  EF32  F000         	goto	i2u29_41
  1250   000060  EF34  F000         	goto	i2u29_40
  1251   000064                     i2u29_41:
  1252   000064  EF36  F000         	goto	i2l413
  1253   000068                     i2u29_40:
  1254   000068  EF17  F000         	goto	i2l1319
  1255   00006C                     i2l413:
  1256   00006C  C016  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  1257   000070  C015  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  1258   000074  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1259   000076  0011               	retfie		f
  1260   000078                     __end_of_INTERRUPT_InterruptManagerHigh:
  1261                           	callstack 0
  1262                           
  1263 ;; *************** function _I2C_Isr *****************
  1264 ;; Defined at:
  1265 ;;		line 165 in file "mcc_generated_files/i2c_slave.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 3
  1286 ;; This function calls:
  1287 ;;		_I2C_SlaveAddrCallBack
  1288 ;;		_I2C_SlaveClearIrq
  1289 ;;		_I2C_SlaveIsAddr
  1290 ;;		_I2C_SlaveIsRead
  1291 ;;		_I2C_SlaveIsRxBufFull
  1292 ;;		_I2C_SlaveIsTxBufEmpty
  1293 ;;		_I2C_SlaveRdCallBack
  1294 ;;		_I2C_SlaveReleaseClock
  1295 ;;		_I2C_SlaveWrCallBack
  1296 ;; This function is called by:
  1297 ;;		_I2C_Open
  1298 ;;		_INTERRUPT_InterruptManagerHigh
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text18
  1303   001002                     __ptext18:
  1304                           	callstack 0
  1305   001002                     _I2C_Isr:
  1306                           	callstack 24
  1307   001002                     
  1308                           ;mcc_generated_files/i2c_slave.c: 167:     I2C_SlaveClearIrq();
  1309   001002  ECC5  F009         	call	_I2C_SlaveClearIrq	;wreg free
  1310   001006                     
  1311                           ;mcc_generated_files/i2c_slave.c: 169:     if(I2C_SlaveIsAddr())
  1312   001006  EC64  F009         	call	_I2C_SlaveIsAddr	;wreg free
  1313   00100A  0900               	iorlw	0
  1314   00100C  B4D8               	btfsc	status,2,c
  1315   00100E  EF0B  F008         	goto	i2u14_41
  1316   001012  EF0D  F008         	goto	i2u14_40
  1317   001016                     i2u14_41:
  1318   001016  EF1F  F008         	goto	i2l1215
  1319   00101A                     i2u14_40:
  1320   00101A                     
  1321                           ;mcc_generated_files/i2c_slave.c: 170:     {;mcc_generated_files/i2c_slave.c: 171:      
      +                             if(I2C_SlaveIsRead())
  1322   00101A  EC5A  F009         	call	_I2C_SlaveIsRead	;wreg free
  1323   00101E  0900               	iorlw	0
  1324   001020  B4D8               	btfsc	status,2,c
  1325   001022  EF15  F008         	goto	i2u15_41
  1326   001026  EF17  F008         	goto	i2u15_40
  1327   00102A                     i2u15_41:
  1328   00102A  EF1B  F008         	goto	i2l1213
  1329   00102E                     i2u15_40:
  1330   00102E                     
  1331                           ;mcc_generated_files/i2c_slave.c: 172:         {;mcc_generated_files/i2c_slave.c: 173:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  1332   00102E  0E01               	movlw	1
  1333   001030  6E0D               	movwf	_i2cSlaveState^0,c	;volatile
  1334                           
  1335                           ;mcc_generated_files/i2c_slave.c: 174:         }
  1336   001032  EF5F  F008         	goto	i2l1239
  1337   001036                     i2l1213:
  1338                           
  1339                           ;mcc_generated_files/i2c_slave.c: 176:         {;mcc_generated_files/i2c_slave.c: 177:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  1340   001036  0E02               	movlw	2
  1341   001038  6E0D               	movwf	_i2cSlaveState^0,c	;volatile
  1342   00103A  EF5F  F008         	goto	i2l1239
  1343   00103E                     i2l1215:
  1344                           
  1345                           ;mcc_generated_files/i2c_slave.c: 181:     {;mcc_generated_files/i2c_slave.c: 182:      
      +                             if(I2C_SlaveIsRead())
  1346   00103E  EC5A  F009         	call	_I2C_SlaveIsRead	;wreg free
  1347   001042  0900               	iorlw	0
  1348   001044  B4D8               	btfsc	status,2,c
  1349   001046  EF27  F008         	goto	i2u16_41
  1350   00104A  EF29  F008         	goto	i2u16_40
  1351   00104E                     i2u16_41:
  1352   00104E  EF2D  F008         	goto	i2l1219
  1353   001052                     i2u16_40:
  1354   001052                     
  1355                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  1356   001052  0E03               	movlw	3
  1357   001054  6E0D               	movwf	_i2cSlaveState^0,c	;volatile
  1358                           
  1359                           ;mcc_generated_files/i2c_slave.c: 185:         }
  1360   001056  EF5F  F008         	goto	i2l1239
  1361   00105A                     i2l1219:
  1362                           
  1363                           ;mcc_generated_files/i2c_slave.c: 187:         {;mcc_generated_files/i2c_slave.c: 188:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  1364   00105A  0E04               	movlw	4
  1365   00105C  6E0D               	movwf	_i2cSlaveState^0,c	;volatile
  1366   00105E  EF5F  F008         	goto	i2l1239
  1367   001062                     i2l1221:
  1368                           
  1369                           ;mcc_generated_files/i2c_slave.c: 195:             I2C_SlaveAddrCallBack();
  1370   001062  EC13  F009         	call	_I2C_SlaveAddrCallBack	;wreg free
  1371   001066                     
  1372                           ;mcc_generated_files/i2c_slave.c: 196:             if(I2C_SlaveIsTxBufEmpty())
  1373   001066  EC46  F009         	call	_I2C_SlaveIsTxBufEmpty	;wreg free
  1374   00106A  0900               	iorlw	0
  1375   00106C  B4D8               	btfsc	status,2,c
  1376   00106E  EF3B  F008         	goto	i2u17_41
  1377   001072  EF3D  F008         	goto	i2u17_40
  1378   001076                     i2u17_41:
  1379   001076  EF7C  F008         	goto	i2l1241
  1380   00107A                     i2u17_40:
  1381   00107A                     i2l1225:
  1382                           
  1383                           ;mcc_generated_files/i2c_slave.c: 197:             {;mcc_generated_files/i2c_slave.c: 19
      +                          8:                 I2C_SlaveWrCallBack();
  1384   00107A  ECE5  F008         	call	_I2C_SlaveWrCallBack	;wreg free
  1385   00107E  EF7C  F008         	goto	i2l1241
  1386   001082                     i2l1227:
  1387                           
  1388                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  1389   001082  EC13  F009         	call	_I2C_SlaveAddrCallBack	;wreg free
  1390                           
  1391                           ;mcc_generated_files/i2c_slave.c: 203:             break;
  1392   001086  EF7C  F008         	goto	i2l1241
  1393   00108A                     i2l1229:
  1394                           
  1395                           ;mcc_generated_files/i2c_slave.c: 205:             if(I2C_SlaveIsTxBufEmpty())
  1396   00108A  EC46  F009         	call	_I2C_SlaveIsTxBufEmpty	;wreg free
  1397   00108E  0900               	iorlw	0
  1398   001090  B4D8               	btfsc	status,2,c
  1399   001092  EF4D  F008         	goto	i2u18_41
  1400   001096  EF4F  F008         	goto	i2u18_40
  1401   00109A                     i2u18_41:
  1402   00109A  EF7C  F008         	goto	i2l1241
  1403   00109E                     i2u18_40:
  1404   00109E  EF3D  F008         	goto	i2l1225
  1405   0010A2                     i2l1233:
  1406                           
  1407                           ;mcc_generated_files/i2c_slave.c: 211:             if(I2C_SlaveIsRxBufFull())
  1408   0010A2  EC50  F009         	call	_I2C_SlaveIsRxBufFull	;wreg free
  1409   0010A6  0900               	iorlw	0
  1410   0010A8  B4D8               	btfsc	status,2,c
  1411   0010AA  EF59  F008         	goto	i2u19_41
  1412   0010AE  EF5B  F008         	goto	i2u19_40
  1413   0010B2                     i2u19_41:
  1414   0010B2  EF7C  F008         	goto	i2l1241
  1415   0010B6                     i2u19_40:
  1416   0010B6                     
  1417                           ;mcc_generated_files/i2c_slave.c: 212:             {;mcc_generated_files/i2c_slave.c: 21
      +                          3:                 I2C_SlaveRdCallBack();
  1418   0010B6  ECFC  F008         	call	_I2C_SlaveRdCallBack	;wreg free
  1419   0010BA  EF7C  F008         	goto	i2l1241
  1420   0010BE                     i2l1239:
  1421   0010BE  500D               	movf	_i2cSlaveState^0,w,c	;volatile
  1422   0010C0  6E13               	movwf	??_I2C_Isr^0,c
  1423   0010C2  6A14               	clrf	(??_I2C_Isr+1)^0,c
  1424                           
  1425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1426                           ; Switch size 1, requested type "simple"
  1427                           ; Number of cases is 1, Range of values is 0 to 0
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte            4     3 (average)
  1431                           ;	Chosen strategy is simple_byte
  1432   0010C4  5014               	movf	(??_I2C_Isr+1)^0,w,c
  1433   0010C6  0A00               	xorlw	0	; case 0
  1434   0010C8  B4D8               	btfsc	status,2,c
  1435   0010CA  EF69  F008         	goto	i2l1363
  1436   0010CE  EF7C  F008         	goto	i2l1241
  1437   0010D2                     i2l1363:
  1438                           
  1439                           ; Switch size 1, requested type "simple"
  1440                           ; Number of cases is 4, Range of values is 1 to 4
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; simple_byte           13     7 (average)
  1444                           ;	Chosen strategy is simple_byte
  1445   0010D2  5013               	movf	??_I2C_Isr^0,w,c
  1446   0010D4  0A01               	xorlw	1	; case 1
  1447   0010D6  B4D8               	btfsc	status,2,c
  1448   0010D8  EF31  F008         	goto	i2l1221
  1449   0010DC  0A03               	xorlw	3	; case 2
  1450   0010DE  B4D8               	btfsc	status,2,c
  1451   0010E0  EF41  F008         	goto	i2l1227
  1452   0010E4  0A01               	xorlw	1	; case 3
  1453   0010E6  B4D8               	btfsc	status,2,c
  1454   0010E8  EF45  F008         	goto	i2l1229
  1455   0010EC  0A07               	xorlw	7	; case 4
  1456   0010EE  B4D8               	btfsc	status,2,c
  1457   0010F0  EF51  F008         	goto	i2l1233
  1458   0010F4  EF7C  F008         	goto	i2l1241
  1459   0010F8                     i2l1241:
  1460                           
  1461                           ;mcc_generated_files/i2c_slave.c: 219:     I2C_SlaveReleaseClock();
  1462   0010F8  ECC3  F009         	call	_I2C_SlaveReleaseClock	;wreg free
  1463   0010FC  0012               	return		;funcret
  1464   0010FE                     __end_of_I2C_Isr:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _I2C_SlaveWrCallBack *****************
  1468 ;; Defined at:
  1469 ;;		line 250 in file "mcc_generated_files/i2c_slave.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 2
  1490 ;; This function calls:
  1491 ;;		NULL
  1492 ;;		_I2C_SlaveDefWrInterruptHandler
  1493 ;; This function is called by:
  1494 ;;		_I2C_Isr
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text19
  1499   0011CA                     __ptext19:
  1500                           	callstack 0
  1501   0011CA                     _I2C_SlaveWrCallBack:
  1502                           	callstack 24
  1503   0011CA                     
  1504                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  1505   0011CA  5007               	movf	_I2C_SlaveWrInterruptHandler^0,w,c
  1506   0011CC  1008               	iorwf	(_I2C_SlaveWrInterruptHandler+1)^0,w,c
  1507   0011CE  B4D8               	btfsc	status,2,c
  1508   0011D0  EFEC  F008         	goto	i2u9_41
  1509   0011D4  EFEE  F008         	goto	i2u9_40
  1510   0011D8                     i2u9_41:
  1511   0011D8  EFFB  F008         	goto	i2l281
  1512   0011DC                     i2u9_40:
  1513   0011DC                     
  1514                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  1515   0011DC  D802               	call	i2u10_48
  1516   0011DE  EFFB  F008         	goto	i2u10_49
  1517   0011E2                     i2u10_48:
  1518   0011E2  0005               	push	
  1519   0011E4  6EFA               	movwf	pclath,c
  1520   0011E6  5007               	movf	_I2C_SlaveWrInterruptHandler^0,w,c
  1521   0011E8  6EFD               	movwf	tosl,c
  1522   0011EA  5008               	movf	(_I2C_SlaveWrInterruptHandler+1)^0,w,c
  1523   0011EC  6EFE               	movwf	tosh,c
  1524   0011EE  50F8               	movf	tblptru,w,c
  1525   0011F0  6EFF               	movwf	tosu,c
  1526   0011F2  50FA               	movf	pclath,w,c
  1527   0011F4  0012               	return		;indir
  1528   0011F6                     i2u10_49:
  1529   0011F6                     i2l281:
  1530   0011F6  0012               	return		;funcret
  1531   0011F8                     __end_of_I2C_SlaveWrCallBack:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  1535 ;; Defined at:
  1536 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 1
  1557 ;; This function calls:
  1558 ;;		_I2C_SlaveSendTxData
  1559 ;; This function is called by:
  1560 ;;		_I2C_Open
  1561 ;;		_I2C_SlaveWrCallBack
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text20
  1566   00135C                     __ptext20:
  1567                           	callstack 0
  1568   00135C                     _I2C_SlaveDefWrInterruptHandler:
  1569                           	callstack 24
  1570   00135C                     
  1571                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
  1572   00135C  5010               	movf	_i2cWrData^0,w,c	;volatile
  1573   00135E  ECB2  F009         	call	_I2C_SlaveSendTxData
  1574   001362  0012               	return		;funcret
  1575   001364                     __end_of_I2C_SlaveDefWrInterruptHandler:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _I2C_SlaveSendTxData *****************
  1579 ;; Defined at:
  1580 ;;		line 391 in file "mcc_generated_files/i2c_slave.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  data            1    wreg     unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  data            1    0[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:        1 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_I2C_SlaveDefWrInterruptHandler
  1604 ;;		_I2C_Write
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text21
  1609   001364                     __ptext21:
  1610                           	callstack 0
  1611   001364                     _I2C_SlaveSendTxData:
  1612                           	callstack 24
  1613                           
  1614                           ;incstack = 0
  1615                           ;I2C_SlaveSendTxData@data stored from wreg
  1616   001364  6E12               	movwf	I2C_SlaveSendTxData@data^0,c
  1617   001366                     
  1618                           ;mcc_generated_files/i2c_slave.c: 391: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 392: {;mcc_generated_files/i2c_sla
      +                          ve.c: 393:     SSPBUF = data;
  1619   001366  C012  FFC9         	movff	I2C_SlaveSendTxData@data,4041	;volatile
  1620   00136A  0012               	return		;funcret
  1621   00136C                     __end_of_I2C_SlaveSendTxData:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _I2C_SlaveReleaseClock *****************
  1625 ;; Defined at:
  1626 ;;		line 361 in file "mcc_generated_files/i2c_slave.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		None
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_I2C_Isr
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text22
  1654   001386                     __ptext22:
  1655                           	callstack 0
  1656   001386                     _I2C_SlaveReleaseClock:
  1657                           	callstack 26
  1658   001386                     
  1659                           ;mcc_generated_files/i2c_slave.c: 363:     SSPCON1bits.CKP = 1;
  1660   001386  88C6               	bsf	198,4,c	;volatile
  1661   001388  0012               	return		;funcret
  1662   00138A                     __end_of_I2C_SlaveReleaseClock:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _I2C_SlaveRdCallBack *****************
  1666 ;; Defined at:
  1667 ;;		line 233 in file "mcc_generated_files/i2c_slave.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 2
  1688 ;; This function calls:
  1689 ;;		NULL
  1690 ;;		_Custom_I2C_SlaveDefRdInterruptHandler
  1691 ;;		_I2C_SlaveDefRdInterruptHandler
  1692 ;; This function is called by:
  1693 ;;		_I2C_Isr
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text23
  1698   0011F8                     __ptext23:
  1699                           	callstack 0
  1700   0011F8                     _I2C_SlaveRdCallBack:
  1701                           	callstack 24
  1702   0011F8                     
  1703                           ;mcc_generated_files/i2c_slave.c: 235:     if (I2C_SlaveRdInterruptHandler)
  1704   0011F8  5009               	movf	_I2C_SlaveRdInterruptHandler^0,w,c
  1705   0011FA  100A               	iorwf	(_I2C_SlaveRdInterruptHandler+1)^0,w,c
  1706   0011FC  B4D8               	btfsc	status,2,c
  1707   0011FE  EF03  F009         	goto	i2u12_41
  1708   001202  EF05  F009         	goto	i2u12_40
  1709   001206                     i2u12_41:
  1710   001206  EF12  F009         	goto	i2l271
  1711   00120A                     i2u12_40:
  1712   00120A                     
  1713                           ;mcc_generated_files/i2c_slave.c: 236:     {;mcc_generated_files/i2c_slave.c: 237:      
      +                             I2C_SlaveRdInterruptHandler();
  1714   00120A  D802               	call	i2u13_48
  1715   00120C  EF12  F009         	goto	i2u13_49
  1716   001210                     i2u13_48:
  1717   001210  0005               	push	
  1718   001212  6EFA               	movwf	pclath,c
  1719   001214  5009               	movf	_I2C_SlaveRdInterruptHandler^0,w,c
  1720   001216  6EFD               	movwf	tosl,c
  1721   001218  500A               	movf	(_I2C_SlaveRdInterruptHandler+1)^0,w,c
  1722   00121A  6EFE               	movwf	tosh,c
  1723   00121C  50F8               	movf	tblptru,w,c
  1724   00121E  6EFF               	movwf	tosu,c
  1725   001220  50FA               	movf	pclath,w,c
  1726   001222  0012               	return		;indir
  1727   001224                     i2u13_49:
  1728   001224                     i2l271:
  1729   001224  0012               	return		;funcret
  1730   001226                     __end_of_I2C_SlaveRdCallBack:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _Custom_I2C_SlaveDefRdInterruptHandler *****************
  1734 ;; Defined at:
  1735 ;;		line 5 in file "main.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		None
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;;		_I2C_SlaveRdCallBack
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text24
  1764   00137C                     __ptext24:
  1765                           	callstack 0
  1766   00137C                     _Custom_I2C_SlaveDefRdInterruptHandler:
  1767                           	callstack 25
  1768   00137C                     
  1769                           ;main.c: 6:     ReadData = SSPBUF;
  1770   00137C  CFC9 F011          	movff	4041,_ReadData	;volatile
  1771   001380  0012               	return		;funcret
  1772   001382                     __end_of_Custom_I2C_SlaveDefRdInterruptHandler:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  1776 ;; Defined at:
  1777 ;;		line 241 in file "mcc_generated_files/i2c_slave.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		_I2C_SlaveGetRxData
  1800 ;; This function is called by:
  1801 ;;		_I2C_Open
  1802 ;;		_I2C_SlaveRdCallBack
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text25
  1807   00136C                     __ptext25:
  1808                           	callstack 0
  1809   00136C                     _I2C_SlaveDefRdInterruptHandler:
  1810                           	callstack 24
  1811   00136C                     
  1812                           ;mcc_generated_files/i2c_slave.c: 242:     i2cRdData = I2C_SlaveGetRxData();
  1813   00136C  ECC7  F009         	call	_I2C_SlaveGetRxData	;wreg free
  1814   001370  6E0F               	movwf	_i2cRdData^0,c	;volatile
  1815   001372  0012               	return		;funcret
  1816   001374                     __end_of_I2C_SlaveDefRdInterruptHandler:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  1820 ;; Defined at:
  1821 ;;		line 381 in file "mcc_generated_files/i2c_slave.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      _Bool 
  1828 ;; Registers used:
  1829 ;;		wreg
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_I2C_Isr
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text26
  1849   00128C                     __ptext26:
  1850                           	callstack 0
  1851   00128C                     _I2C_SlaveIsTxBufEmpty:
  1852                           	callstack 26
  1853   00128C                     
  1854                           ;mcc_generated_files/i2c_slave.c: 383:     return !SSPSTATbits.BF;
  1855   00128C  A0C7               	btfss	199,0,c	;volatile
  1856   00128E  EF4B  F009         	goto	i2u7_41
  1857   001292  EF4E  F009         	goto	i2u7_40
  1858   001296                     i2u7_41:
  1859   001296  0E01               	movlw	1
  1860   001298  EF4F  F009         	goto	i2u8_40
  1861   00129C                     i2u7_40:
  1862   00129C  0E00               	movlw	0
  1863   00129E                     i2u8_40:
  1864   00129E  0012               	return		;funcret
  1865   0012A0                     __end_of_I2C_SlaveIsTxBufEmpty:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  1869 ;; Defined at:
  1870 ;;		line 386 in file "mcc_generated_files/i2c_slave.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      _Bool 
  1877 ;; Registers used:
  1878 ;;		wreg
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_I2C_Isr
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text27
  1898   0012A0                     __ptext27:
  1899                           	callstack 0
  1900   0012A0                     _I2C_SlaveIsRxBufFull:
  1901                           	callstack 26
  1902   0012A0                     
  1903                           ;mcc_generated_files/i2c_slave.c: 388:     return SSPSTATbits.BF;
  1904   0012A0  B0C7               	btfsc	199,0,c	;volatile
  1905   0012A2  EF55  F009         	goto	i2u11_41
  1906   0012A6  EF58  F009         	goto	i2u11_40
  1907   0012AA                     i2u11_41:
  1908   0012AA  0E01               	movlw	1
  1909   0012AC  EF59  F009         	goto	i2u11_46
  1910   0012B0                     i2u11_40:
  1911   0012B0  0E00               	movlw	0
  1912   0012B2                     i2u11_46:
  1913   0012B2  0012               	return		;funcret
  1914   0012B4                     __end_of_I2C_SlaveIsRxBufFull:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _I2C_SlaveIsRead *****************
  1918 ;; Defined at:
  1919 ;;		line 351 in file "mcc_generated_files/i2c_slave.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      _Bool 
  1926 ;; Registers used:
  1927 ;;		wreg
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_I2C_Isr
  1943 ;;		_I2C_IsRead
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text28
  1948   0012B4                     __ptext28:
  1949                           	callstack 0
  1950   0012B4                     _I2C_SlaveIsRead:
  1951                           	callstack 26
  1952   0012B4                     
  1953                           ;mcc_generated_files/i2c_slave.c: 353:     return (SSPSTATbits.R_nW);
  1954   0012B4  B4C7               	btfsc	199,2,c	;volatile
  1955   0012B6  EF5F  F009         	goto	i2u2_41
  1956   0012BA  EF62  F009         	goto	i2u2_40
  1957   0012BE                     i2u2_41:
  1958   0012BE  0E01               	movlw	1
  1959   0012C0  EF63  F009         	goto	i2u2_46
  1960   0012C4                     i2u2_40:
  1961   0012C4  0E00               	movlw	0
  1962   0012C6                     i2u2_46:
  1963   0012C6  0012               	return		;funcret
  1964   0012C8                     __end_of_I2C_SlaveIsRead:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _I2C_SlaveIsAddr *****************
  1968 ;; Defined at:
  1969 ;;		line 346 in file "mcc_generated_files/i2c_slave.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      _Bool 
  1976 ;; Registers used:
  1977 ;;		wreg
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_I2C_Isr
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text29
  1997   0012C8                     __ptext29:
  1998                           	callstack 0
  1999   0012C8                     _I2C_SlaveIsAddr:
  2000                           	callstack 26
  2001   0012C8                     
  2002                           ;mcc_generated_files/i2c_slave.c: 348:     return !(SSPSTATbits.D_nA);
  2003   0012C8  AAC7               	btfss	199,5,c	;volatile
  2004   0012CA  EF69  F009         	goto	i2u3_41
  2005   0012CE  EF6C  F009         	goto	i2u3_40
  2006   0012D2                     i2u3_41:
  2007   0012D2  0E01               	movlw	1
  2008   0012D4  EF6D  F009         	goto	i2u4_40
  2009   0012D8                     i2u3_40:
  2010   0012D8  0E00               	movlw	0
  2011   0012DA                     i2u4_40:
  2012   0012DA  0012               	return		;funcret
  2013   0012DC                     __end_of_I2C_SlaveIsAddr:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _I2C_SlaveClearIrq *****************
  2017 ;; Defined at:
  2018 ;;		line 356 in file "mcc_generated_files/i2c_slave.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		None
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_I2C_Isr
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text30
  2046   00138A                     __ptext30:
  2047                           	callstack 0
  2048   00138A                     _I2C_SlaveClearIrq:
  2049                           	callstack 26
  2050   00138A                     
  2051                           ;mcc_generated_files/i2c_slave.c: 358:     PIR1bits.SSPIF = 0;
  2052   00138A  969E               	bcf	158,3,c	;volatile
  2053   00138C  0012               	return		;funcret
  2054   00138E                     __end_of_I2C_SlaveClearIrq:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _I2C_SlaveAddrCallBack *****************
  2058 ;; Defined at:
  2059 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 2
  2080 ;; This function calls:
  2081 ;;		NULL
  2082 ;;		_I2C_SlaveDefAddrInterruptHandler
  2083 ;; This function is called by:
  2084 ;;		_I2C_Isr
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text31
  2089   001226                     __ptext31:
  2090                           	callstack 0
  2091   001226                     _I2C_SlaveAddrCallBack:
  2092                           	callstack 24
  2093   001226                     
  2094                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
  2095   001226  5005               	movf	_I2C_SlaveAddrInterruptHandler^0,w,c
  2096   001228  1006               	iorwf	(_I2C_SlaveAddrInterruptHandler+1)^0,w,c
  2097   00122A  B4D8               	btfsc	status,2,c
  2098   00122C  EF1A  F009         	goto	i2u5_41
  2099   001230  EF1C  F009         	goto	i2u5_40
  2100   001234                     i2u5_41:
  2101   001234  EF29  F009         	goto	i2l291
  2102   001238                     i2u5_40:
  2103   001238                     
  2104                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
  2105   001238  D802               	call	i2u6_48
  2106   00123A  EF29  F009         	goto	i2u6_49
  2107   00123E                     i2u6_48:
  2108   00123E  0005               	push	
  2109   001240  6EFA               	movwf	pclath,c
  2110   001242  5005               	movf	_I2C_SlaveAddrInterruptHandler^0,w,c
  2111   001244  6EFD               	movwf	tosl,c
  2112   001246  5006               	movf	(_I2C_SlaveAddrInterruptHandler+1)^0,w,c
  2113   001248  6EFE               	movwf	tosh,c
  2114   00124A  50F8               	movf	tblptru,w,c
  2115   00124C  6EFF               	movwf	tosu,c
  2116   00124E  50FA               	movf	pclath,w,c
  2117   001250  0012               	return		;indir
  2118   001252                     i2u6_49:
  2119   001252                     i2l291:
  2120   001252  0012               	return		;funcret
  2121   001254                     __end_of_I2C_SlaveAddrCallBack:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  2125 ;; Defined at:
  2126 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 1
  2147 ;; This function calls:
  2148 ;;		_I2C_SlaveGetRxData
  2149 ;; This function is called by:
  2150 ;;		_I2C_Open
  2151 ;;		_I2C_SlaveAddrCallBack
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text32
  2156   001374                     __ptext32:
  2157                           	callstack 0
  2158   001374                     _I2C_SlaveDefAddrInterruptHandler:
  2159                           	callstack 24
  2160   001374                     
  2161                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
  2162   001374  ECC7  F009         	call	_I2C_SlaveGetRxData	;wreg free
  2163   001378  6E0E               	movwf	_i2cSlaveAddr^0,c	;volatile
  2164   00137A  0012               	return		;funcret
  2165   00137C                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _I2C_SlaveGetRxData *****************
  2169 ;; Defined at:
  2170 ;;		line 396 in file "mcc_generated_files/i2c_slave.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_I2C_SlaveDefRdInterruptHandler
  2194 ;;		_I2C_SlaveDefAddrInterruptHandler
  2195 ;;		_I2C_Read
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text33
  2200   00138E                     __ptext33:
  2201                           	callstack 0
  2202   00138E                     _I2C_SlaveGetRxData:
  2203                           	callstack 24
  2204   00138E                     
  2205                           ;mcc_generated_files/i2c_slave.c: 398:     return SSPBUF;
  2206   00138E  50C9               	movf	201,w,c	;volatile
  2207   001390  0012               	return		;funcret
  2208   001392                     __end_of_I2C_SlaveGetRxData:
  2209                           	callstack 0
  2210                           
  2211                           	psect	smallconst
  2212   001000                     __psmallconst:
  2213                           	callstack 0
  2214   001000  00                 	db	0
  2215   001001  00                 	db	0	; dummy byte at the end
  2216   000000                     
  2217                           	psect	text34
  2218   000000                     __ptext34:
  2219                           	callstack 0
  2220   000000                     
  2221                           	psect	rparam
  2222   000000                     
  2223                           	psect	temp
  2224   000019                     btemp:
  2225                           	callstack 0
  2226   000019                     	ds	1
  2227   000000                     int$flags	set	btemp
  2228   000000                     wtemp8	set	btemp+1
  2229   000000                     ttemp5	set	btemp+1
  2230   000000                     ttemp6	set	btemp+4
  2231   000000                     ttemp7	set	btemp+8
  2232                           
  2233                           	psect	config
  2234                           
  2235                           ; Padding undefined space
  2236   300000                     	org	3145728
  2237   300000  FF                 	db	255
  2238                           
  2239                           ;Config register CONFIG1H @ 0x300001
  2240                           ;	Oscillator Selection bits
  2241                           ;	FOSC = HS, HS oscillator
  2242                           ;	Fail-Safe Clock Monitor Enable bit
  2243                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2244                           ;	Internal/External Oscillator Switchover bit
  2245                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2246   300001                     	org	3145729
  2247   300001  02                 	db	2
  2248                           
  2249                           ;Config register CONFIG2L @ 0x300002
  2250                           ;	Power-up Timer Enable bit
  2251                           ;	PWRTEN = OFF, PWRT disabled
  2252                           ;	Brown-out Reset Enable bits
  2253                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2254                           ;	Brown Out Reset Voltage bits
  2255                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2256   300002                     	org	3145730
  2257   300002  1F                 	db	31
  2258                           
  2259                           ;Config register CONFIG2H @ 0x300003
  2260                           ;	Watchdog Timer Enable bit
  2261                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2262                           ;	Watchdog Timer Postscale Select bits
  2263                           ;	WDTPS = 32768, 1:32768
  2264   300003                     	org	3145731
  2265   300003  1E                 	db	30
  2266                           
  2267                           ; Padding undefined space
  2268   300004                     	org	3145732
  2269   300004  FF                 	db	255
  2270                           
  2271                           ;Config register CONFIG3H @ 0x300005
  2272                           ;	CCP2 MUX bit
  2273                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2274                           ;	PORTB A/D Enable bit
  2275                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2276                           ;	Low-Power Timer1 Oscillator Enable bit
  2277                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2278                           ;	HFINTOSC Fast Start-up
  2279                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2280                           ;	MCLR Pin Enable bit
  2281                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2282   300005                     	org	3145733
  2283   300005  8B                 	db	139
  2284                           
  2285                           ;Config register CONFIG4L @ 0x300006
  2286                           ;	Stack Full/Underflow Reset Enable bit
  2287                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2288                           ;	Single-Supply ICSP Enable bit
  2289                           ;	LVP = ON, Single-Supply ICSP enabled
  2290                           ;	Extended Instruction Set Enable bit
  2291                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2292                           ;	Background Debugger Enable bit
  2293                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2294   300006                     	org	3145734
  2295   300006  85                 	db	133
  2296                           
  2297                           ; Padding undefined space
  2298   300007                     	org	3145735
  2299   300007  FF                 	db	255
  2300                           
  2301                           ;Config register CONFIG5L @ 0x300008
  2302                           ;	Code Protection Block 0
  2303                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2304                           ;	Code Protection Block 1
  2305                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2306                           ;	Code Protection Block 2
  2307                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2308                           ;	Code Protection Block 3
  2309                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2310   300008                     	org	3145736
  2311   300008  0F                 	db	15
  2312                           
  2313                           ;Config register CONFIG5H @ 0x300009
  2314                           ;	Boot Block Code Protection bit
  2315                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2316                           ;	Data EEPROM Code Protection bit
  2317                           ;	CPD = OFF, Data EEPROM not code-protected
  2318   300009                     	org	3145737
  2319   300009  C0                 	db	192
  2320                           
  2321                           ;Config register CONFIG6L @ 0x30000A
  2322                           ;	Write Protection Block 0
  2323                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2324                           ;	Write Protection Block 1
  2325                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2326                           ;	Write Protection Block 2
  2327                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2328                           ;	Write Protection Block 3
  2329                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2330   30000A                     	org	3145738
  2331   30000A  0F                 	db	15
  2332                           
  2333                           ;Config register CONFIG6H @ 0x30000B
  2334                           ;	Configuration Register Write Protection bit
  2335                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2336                           ;	Boot Block Write Protection bit
  2337                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2338                           ;	Data EEPROM Write Protection bit
  2339                           ;	WRTD = OFF, Data EEPROM not write-protected
  2340   30000B                     	org	3145739
  2341   30000B  E0                 	db	224
  2342                           
  2343                           ;Config register CONFIG7L @ 0x30000C
  2344                           ;	Table Read Protection Block 0
  2345                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2346                           ;	Table Read Protection Block 1
  2347                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2348                           ;	Table Read Protection Block 2
  2349                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2350                           ;	Table Read Protection Block 3
  2351                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2352   30000C                     	org	3145740
  2353   30000C  0F                 	db	15
  2354                           
  2355                           ;Config register CONFIG7H @ 0x30000D
  2356                           ;	Boot Block Table Read Protection bit
  2357                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2358   30000D                     	org	3145741
  2359   30000D  40                 	db	64
  2360                           tosu	equ	0xFFF
  2361                           tosh	equ	0xFFE
  2362                           tosl	equ	0xFFD
  2363                           stkptr	equ	0xFFC
  2364                           pclatu	equ	0xFFB
  2365                           pclath	equ	0xFFA
  2366                           pcl	equ	0xFF9
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           indf0	equ	0xFEF
  2374                           postinc0	equ	0xFEE
  2375                           postdec0	equ	0xFED
  2376                           preinc0	equ	0xFEC
  2377                           plusw0	equ	0xFEB
  2378                           fsr0h	equ	0xFEA
  2379                           fsr0l	equ	0xFE9
  2380                           wreg	equ	0xFE8
  2381                           indf1	equ	0xFE7
  2382                           postinc1	equ	0xFE6
  2383                           postdec1	equ	0xFE5
  2384                           preinc1	equ	0xFE4
  2385                           plusw1	equ	0xFE3
  2386                           fsr1h	equ	0xFE2
  2387                           fsr1l	equ	0xFE1
  2388                           bsr	equ	0xFE0
  2389                           indf2	equ	0xFDF
  2390                           postinc2	equ	0xFDE
  2391                           postdec2	equ	0xFDD
  2392                           preinc2	equ	0xFDC
  2393                           plusw2	equ	0xFDB
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), NULL(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), NULL(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Custom_I2C_SlaveDefRdInterruptHandler(), I2C_SlaveDefRdInterruptHandler(), NULL(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> Custom_I2C_SlaveDefRdInterruptHandler(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), NULL(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), NULL(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), NULL(), 


Critical Paths under _main in COMRAM

    _main->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_I2C_Isr
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     868
                           _I2C_Open
         _I2C_SlaveSetReadIntHandler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     694
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_SlaveSetReadIntHandler                           2     0      2     174
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManagerHigh                       2     2      0      15
                                              3 COMRAM     2     2      0
                                NULL *
                            _I2C_Isr *
 ---------------------------------------------------------------------------------
 (4) _I2C_Isr                                              2     2      0      15
                                              1 COMRAM     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveWrCallBack                                  0     0      0      15
                                NULL *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefWrInterruptHandler                       0     0      0      15
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveSendTxData                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveRdCallBack                                  0     0      0       0
                                NULL *
_Custom_I2C_SlaveDefRdInterruptHandl *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (6) _Custom_I2C_SlaveDefRdInterruptHandler                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveAddrCallBack                                0     0      0       0
                                NULL *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _I2C_SlaveSetReadIntHandler
   _SYSTEM_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       NULL(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       NULL(Fake) *
       _Custom_I2C_SlaveDefRdInterruptHandler *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       NULL(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      18       1       25.5%
BITBIGSFRhhllhl     22      0       0      41        0.0%
BITBIGSFRhhlh       1D      0       0      38        0.0%
BITBIGSFRlllll      17      0       0      48        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRllh         9      0       0      45        0.0%
BITBIGSFRhhllhh      6      0       0      40        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRhhlll       4      0       0      43        0.0%
BITBIGSFRhll         4      0       0      44        0.0%
BITBIGSFRhhllhh      2      0       0      39        0.0%
BITBIGSFRhhllhl      1      0       0      42        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      12        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 12 19:16:28 2023

                                  _SSPSTATbits 0FC7                                             l33 11C8  
                                           l63 12EC                                             l66 1306  
                                           u10 1262                                             u11 125E  
                                          l102 1186                                            l104 1188  
                                          l107 118E                                            l221 115A  
                                          l109 1190                                            l330 1384  
                                          l218 12FC                                            l307 1338  
                                          l324 135A                                            l404 134A  
                                          l318 1270                                            l327 1352  
                                          l264 132E                                            l267 1324  
                                          l277 1310                                            l287 1342  
                                          l297 131A           __end_of_I2C_SlaveSetBusColIntHandler 133A  
                 _I2C_SlaveSetBusColIntHandler 1330                                            u300 1186  
                                          u301 1182                          ??_I2C_SlaveRdCallBack 0012  
                          _I2C_SlaveSendTxData 1364                  I2C_SlaveSetSlaveMask@maskAddr 0017  
                              __end_of_I2C_Isr 10FE                                            tosl 0FFD  
                                          wreg 0FE8                            _I2C_SlaveWrCallBack 11CA  
                                         l1111 11BC                                           l1103 119A  
                                         l1121 12F6                                           l1113 11C6  
                                         l1105 11B2                                           l1131 1262  
                                         l1123 12FA                                           l1115 1344  
                                         l1107 11B4                                           l1133 1266  
                                         l1141 1356                                           l1117 12EE  
                                         l1125 12FE                                           l1109 11B6  
                                         l1135 126A                                           l1143 134E  
                                         l1119 12F2                                           l1137 126E  
                                         l1129 1254                                           l1155 1382  
                                         l1331 1326                                           l1333 1330  
                                         l1341 10FE                                           l1335 1308  
                                         l1343 1102                                           l1191 12E0  
                                         l1351 1160                                           l1337 133A  
                                         l1329 131C                                           l1345 1108  
                                         l1193 12E4                                           l1353 1162  
                                         l1339 1312                                           l1347 1156  
                                         l1195 12E8                                           l1355 1164  
                                         l1189 12DC                                           l1357 1176  
                                         l1349 115C                                           _LATA 0F89  
                                         _LATB 0F8A                                           _LATC 0F8B  
                                         _LATD 0F8C                                           _LATE 0F8D  
                                         i2l95 1380                                           _WPUB 0F7C  
                      __end_of_I2C_SlaveIsAddr 12DC                        __end_of_I2C_SlaveIsRead 12C8  
                                         _main 115C              I2C_SlaveSetAddrIntHandler@handler 0017  
                             __end_of_I2C_Open 115C                                           btemp 0019  
                         ?_I2C_SlaveSendTxData 0012                                           start 0078  
                         ?_I2C_SlaveWrCallBack 0012                                   ___param_bank 0000  
            I2C_SlaveSetReadIntHandler@handler 0017                  __end_of_I2C_SlaveAddrCallBack 1254  
                __end_of_OSCILLATOR_Initialize 1308            fp__I2C_SlaveDefAddrInterruptHandler 0000  
     __end_of_I2C_SlaveDefAddrInterruptHandler 137C             ??_I2C_SlaveDefAddrInterruptHandler 0012  
            ?_I2C_SlaveDefAddrInterruptHandler 0012               _I2C_SlaveDefAddrInterruptHandler 1374  
                                        ?_main 0012                                          _ANSEL 0F7E  
                                        i2l333 12DA                                          i2l261 10FC  
                                        i2l413 006C                                          i2l342 1388  
                                        i2l271 1224                                          i2l336 12C6  
                                        i2l360 136A                                          i2l281 11F6  
                                        i2l409 004C                                          i2l354 129E  
                                        i2l274 1372                                          i2l363 1390  
                                        i2l291 1252                                          i2l339 138C  
                                        i2l284 1362                                          i2l357 12B2  
                                        i2l294 137A                          _I2C_SlaveReleaseClock 1386  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                  ?_I2C_SlaveSetBusColIntHandler 0017  
                       ??_I2C_SlaveIsRxBufFull 0012                                          pclath 0FFA  
                                        pclatu 0FFB                                          ttemp5 001A  
                                        ttemp6 001D                                          ttemp7 0021  
                                        status 0FD8                                          wtemp8 001A  
                        ??_I2C_SlaveSendTxData 0012                          ??_I2C_SlaveWrCallBack 0013  
                        _I2C_SlaveSetSlaveAddr 1354                                __initialization 1272  
                        _I2C_SlaveSetSlaveMask 134C                                   __end_of_main 119A  
                                    ??_I2C_Isr 0013                                         ??_main 0019  
                                __activetblptr 0002                    _I2C_SlaveRdInterruptHandler 0009  
                  _I2C_SlaveWrInterruptHandler 0007                     __end_of_I2C_SlaveEnableIrq 1386  
                   __end_of_I2C_SlaveGetRxData 1392                                         _ANSELH 0F7F  
                                       i2l1101 1374                                         i2l1211 102E  
                                       i2l1221 1062                                         i2l1213 1036  
                                       i2l1205 1002                                         i2l1223 1066  
                                       i2l1215 103E                                         i2l1207 1006  
                                       i2l1161 138A                                         i2l1233 10A2  
                                       i2l1225 107A                                         i2l1241 10F8  
                                       i2l1217 1052                                         i2l1209 101A  
                                       i2l1321 005A                                         i2l1163 12C8  
                                       i2l1171 128C                                         i2l1235 10B6  
                                       i2l1227 1082                                         i2l1219 105A  
                                       i2l1315 0012                                         i2l1157 12B4  
                                       i2l1093 1366                                         i2l1229 108A  
                                       i2l1317 0020                                         i2l1167 1226  
                                       i2l1095 137C                                         i2l1183 11F8  
                                       i2l1175 11CA                                         i2l1239 10BE  
                                       i2l1319 002E                                         i2l1089 138E  
                                       i2l1169 1238                                         i2l1097 136C  
                                       i2l1185 120A                                         i2l1177 11DC  
                                       i2l1179 12A0                                         i2l1187 1386  
                                       i2l1099 135C                                         i2l1363 10D2  
                                       _OSCCON 0FD3                               ?_I2C_SlaveIsAddr 0012  
                                       i2u2_40 12C4                                         i2u2_41 12BE  
                                       i2u2_46 12C6                                         i2u3_40 12D8  
                                       i2u3_41 12D2                                         i2u4_40 12DA  
                                       i2u5_40 1238                                         i2u5_41 1234  
                                       i2u6_48 123E                                         i2u7_40 129C  
                                       i2u6_49 1252                                         i2u7_41 1296  
                                       _SSPADD 0FC8                               ?_I2C_SlaveIsRead 0012  
                                       i2u8_40 129E                                         i2u9_40 11DC  
                                       i2u9_41 11D8                                         _SSPBUF 0FC9  
                                       _SSPMSK 0F77                         _I2C_SlaveSetIsrHandler 1326  
                                       clear_0 1278                                         isa$std 0001  
                       ?_I2C_SlaveReleaseClock 0012                        ??_I2C_SlaveIsTxBufEmpty 0012  
                                    ?_I2C_Open 0012            I2C_SlaveSetBusColIntHandler@handler 0017  
                                 __mediumconst 0000                                         tblptru 0FF8  
                                _I2C_SlaveOpen 1254               ??_INTERRUPT_InterruptManagerHigh 0015  
              ?_INTERRUPT_InterruptManagerHigh 0012                              _SYSTEM_Initialize 12DC  
                                   __accesstop 0060                        __end_of__initialization 127E  
           I2C_SlaveSetWrColIntHandler@handler 0017                   ??_I2C_SlaveSetAddrIntHandler 0019  
                           ?_SYSTEM_Initialize 0012                                  ___rparam_used 0001  
                       ?_I2C_SlaveSetSlaveAddr 0012                         ?_I2C_SlaveSetSlaveMask 0012  
                               __pcstackCOMRAM 0012                            ??_SYSTEM_Initialize 0017  
               I2C_SlaveSetSlaveAddr@slaveAddr 0017                   ??_I2C_SlaveSetReadIntHandler 0019  
                                   ??_I2C_Open 0019                                 ?_I2C_SlaveOpen 0012  
                    __end_of_SYSTEM_Initialize 12EE            __end_of_I2C_SlaveSetWrColIntHandler 131C  
                  _I2C_SlaveSetWrColIntHandler 1312                    __end_of_I2C_SlaveRdCallBack 1226  
                ??_I2C_SlaveSetWrColIntHandler 0019                                        _I2C_Isr 1002  
                                      i2u11_40 12B0                                        i2u10_48 11E2  
                                      i2u11_41 12AA                                        i2u10_49 11F6  
                                      i2u11_46 12B2                                        i2u12_40 120A  
                                      i2u12_41 1206                                        i2u13_48 1210  
                                      i2u14_40 101A                                        i2u13_49 1224  
                                      i2u14_41 1016                                        i2u15_40 102E  
                                      i2u15_41 102A                                        i2u16_40 1052  
                                      i2u16_41 104E                                        i2u17_40 107A  
                                      i2u25_40 0020                                        i2u17_41 1076  
                                      i2u25_41 001C                                        i2u18_40 109E  
                                      i2u26_40 002E                                        i2u18_41 109A  
                                      i2u26_41 002A                                        i2u19_40 10B6  
                                      i2u19_41 10B2                                        i2u28_40 005A  
                                      i2u27_48 0034                                        i2u28_41 0056  
                                      i2u27_49 0048                                        i2u29_40 0068  
                                      i2u29_41 0064                                        _OSCTUNE 0F9B  
                                      _SSPCON1 0FC6                                        _SSPCON2 0FC5  
                                      _SSPSTAT 0FC7                                        __Hparam 0000  
                                      __Lparam 0000                        I2C_SlaveSendTxData@data 0012  
                                 __psmallconst 1000                          _I2C_SlaveAddrCallBack 1226  
                                      __pcinit 1272                                 _I2C_Initialize 12EE  
                                      __ramtop 1000                                        __ptext0 115C  
                                      __ptext1 12DC                                        __ptext2 119A  
                                      __ptext3 12FE                                        __ptext4 1344  
                                      __ptext5 12EE                                        __ptext6 10FE  
                                      __ptext7 1308                                        __ptext8 1312  
                                      __ptext9 134C                                     fp__I2C_Isr 0000  
                              ??_I2C_SlaveOpen 0017                          _OSCILLATOR_Initialize 12FE  
                     ??_PIN_MANAGER_Initialize 0017                  I2C_SlaveSetIsrHandler@handler 0017  
                  __end_of_I2C_SlaveSendTxData 136C                           end_of_initialization 127E  
                  __end_of_I2C_SlaveWrCallBack 11F8             __end_of_I2C_SlaveSetAddrIntHandler 1344  
                   _I2C_SlaveSetAddrIntHandler 133A                                  __Lmediumconst 0000  
                           _I2C_SlaveEnableIrq 1382                             _I2C_SlaveGetRxData 138E  
                      ?_I2C_SlaveSetIsrHandler 0017                                   _i2cSlaveAddr 000E  
                                      postinc0 0FEE                         __end_of_I2C_Initialize 12FE  
                      ??_I2C_SlaveReleaseClock 0012                            ?_I2C_SlaveEnableIrq 0012  
                          ?_I2C_SlaveGetRxData 0012             __end_of_I2C_SlaveSetReadIntHandler 1326  
                   _I2C_SlaveSetReadIntHandler 131C                   ?_I2C_SlaveSetWriteIntHandler 0017  
                __end_of_I2C_SlaveIsTxBufEmpty 12A0                           ??_I2C_SlaveEnableIrq 0017  
                         ??_I2C_SlaveGetRxData 0012                        ??_I2C_SlaveSetSlaveAddr 0017  
                      ??_I2C_SlaveSetSlaveMask 0017                 __end_of_I2C_SlaveSetIsrHandler 1330  
                       ?_I2C_SlaveAddrCallBack 0012                   __end_of_INTERRUPT_Initialize 134C  
                              ?_I2C_Initialize 0012                                      _i2cRdData 000F  
                       ?_OSCILLATOR_Initialize 0012                                      _i2cWrData 0010  
                          start_initialization 1272                                       ?_I2C_Isr 0012  
                                  __pbssCOMRAM 0001                 ??_I2C_SlaveSetBusColIntHandler 0019  
                       _PIN_MANAGER_Initialize 119A                                      __pintcode 0008  
                            ??_I2C_SlaveIsAddr 0012                              ??_I2C_SlaveIsRead 0012  
            fp__I2C_SlaveDefRdInterruptHandler 0000       fp__Custom_I2C_SlaveDefRdInterruptHandler 0000  
__end_of_Custom_I2C_SlaveDefRdInterruptHandler 1382        ??_Custom_I2C_SlaveDefRdInterruptHandler 0012  
       ?_Custom_I2C_SlaveDefRdInterruptHandler 0012               ??_I2C_SlaveDefRdInterruptHandler 0012  
              ?_I2C_SlaveDefRdInterruptHandler 0012          _Custom_I2C_SlaveDefRdInterruptHandler 137C  
            fp__I2C_SlaveDefWrInterruptHandler 0000               ??_I2C_SlaveDefWrInterruptHandler 0013  
              ?_I2C_SlaveDefWrInterruptHandler 0012                                    __smallconst 1000  
                                     _I2C_Open 10FE                           _INTERRUPT_Initialize 1344  
                  ?_I2C_SlaveSetAddrIntHandler 0017                                       _LATDbits 0F8C  
                                     _IPR1bits 0F9F                                       _IPR2bits 0FA2  
                                     _PIE1bits 0F9D                                       _PIE2bits 0FA0  
                            _I2C_SlaveClearIrq 138A                                       _PIR1bits 0F9E  
                                     _PIR2bits 0FA1                             ?_I2C_SlaveClearIrq 0012  
                                     _RCONbits 0FD0                   __end_of_I2C_SlaveIsRxBufFull 12B4  
                  ?_I2C_SlaveSetReadIntHandler 0017                  __end_of_I2C_SlaveReleaseClock 138A  
                          ??_I2C_SlaveClearIrq 0012                          __end_of_I2C_SlaveOpen 1272  
                                  _INTCON2bits 0FF1                          ?_INTERRUPT_Initialize 0012  
            _I2C_SlaveDefWrColInterruptHandler 0000                                       _ReadData 0011  
                    __end_of_I2C_SlaveClearIrq 138E                  __end_of_I2C_SlaveSetSlaveAddr 135C  
                __end_of_I2C_SlaveSetSlaveMask 1354                               ??_I2C_Initialize 0017  
                      ??_I2C_SlaveAddrCallBack 0012                                       __Hrparam 0000  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0017  
                _I2C_SlaveAddrInterruptHandler 0005             _I2C_SlaveDefBusColInterruptHandler 0000  
               _I2C_SlaveWrColInterruptHandler 0001                                       __ptext10 1354  
                                     __ptext11 131C                                       __ptext20 135C  
                                     __ptext12 1326                                       __ptext21 1364  
                                     __ptext13 1330                                       __ptext30 138A  
                                     __ptext22 1386                                       __ptext14 133A  
                                     __ptext31 1226                                       __ptext23 11F8  
                                     __ptext15 1254                                       __ptext32 1374  
                                     __ptext24 137C                                       __ptext16 1382  
                                     __ptext33 138E                                       __ptext25 136C  
                                     __ptext34 0000                                       __ptext26 128C  
                                     __ptext18 1002                                       __ptext27 12A0  
                                     __ptext19 11CA                                       __ptext28 12B4  
                                     __ptext29 12C8                          _I2C_SlaveIsTxBufEmpty 128C  
                 ?_I2C_SlaveSetWrColIntHandler 0017                                       isa$xinst 0000  
                                     int$flags 0019                                     _INTCONbits 0FF2  
                       ??_INTERRUPT_Initialize 0017                           _I2C_SlaveIsRxBufFull 12A0  
                                     intlevel2 0000                _I2C_SlaveBusColInterruptHandler 0003  
                      ?_PIN_MANAGER_Initialize 0012                            _I2C_SlaveRdCallBack 11F8  
                              _I2C_SlaveIsAddr 12C8                                _I2C_SlaveIsRead 12B4  
                                _i2cSlaveState 000D             I2C_SlaveSetWriteIntHandler@handler 0017  
          __end_of_I2C_SlaveSetWriteIntHandler 1312                    _I2C_SlaveSetWriteIntHandler 1308  
       __end_of_INTERRUPT_InterruptManagerHigh 0078                 _INTERRUPT_InterruptManagerHigh 0008  
                         ?_I2C_SlaveRdCallBack 0012                         ?_I2C_SlaveIsTxBufEmpty 0012  
                ??_I2C_SlaveSetWriteIntHandler 0019                                    _SSPCON1bits 0FC6  
                                  _SSPCON2bits 0FC5                       ??_I2C_SlaveSetIsrHandler 0019  
                        ?_I2C_SlaveIsRxBufFull 0012                 __end_of_PIN_MANAGER_Initialize 11CA  
       __end_of_I2C_SlaveDefRdInterruptHandler 1374                 _I2C_SlaveDefRdInterruptHandler 136C  
       __end_of_I2C_SlaveDefWrInterruptHandler 1364                 _I2C_SlaveDefWrInterruptHandler 135C  
                        _MSSP_InterruptHandler 000B  
